{
    "theorem_protocol": {
        "RodeoClientEnv_term": {
            "TERM_CONSTRUCTOR": "lseq",
            "TERM_BODY": [
                {
                    "TERM_CONSTRUCTOR": "bseq",
                    "TERM_BODY": [
                        [
                            "ALL",
                            "ALL"
                        ],
                        {
                            "TERM_CONSTRUCTOR": "asp",
                            "TERM_BODY": {
                                "ASP_CONSTRUCTOR": "ASPC",
                                "ASP_BODY": {
                                    "ASP_ID": "hashdir",
                                    "ASP_ARGS": {},
                                    "ASP_PLC": "coq_demo_Plc",
                                    "ASP_TARG_ID": "coq_env_dir_targ"
                                }
                            }
                        },
                        {
                            "TERM_CONSTRUCTOR": "bseq",
                            "TERM_BODY": [
                                [
                                    "ALL",
                                    "ALL"
                                ],
                                {
                                    "TERM_CONSTRUCTOR": "asp",
                                    "TERM_BODY": {
                                        "ASP_CONSTRUCTOR": "ASPC",
                                        "ASP_BODY": {
                                            "ASP_ID": "run_command",
                                            "ASP_ARGS": {},
                                            "ASP_PLC": "coq_demo_Plc",
                                            "ASP_TARG_ID": "run_coq_theorem_targ"
                                        }
                                    }
                                },
                                {
                                    "TERM_CONSTRUCTOR": "asp",
                                    "TERM_BODY": {
                                        "ASP_CONSTRUCTOR": "ASPC",
                                        "ASP_BODY": {
                                            "ASP_ID": "run_command",
                                            "ASP_ARGS": {},
                                            "ASP_PLC": "coq_demo_Plc",
                                            "ASP_TARG_ID": "run_coq_theorem_test_targ"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "TERM_CONSTRUCTOR": "asp",
                    "TERM_BODY": {
                        "ASP_CONSTRUCTOR": "APPR"
                    }
                }
            ]
        },
        "RodeoClientEnv_session": {
            "Session_Plc": "P0",
            "Plc_Mapping": {
                "P0": "127.0.0.1:5000",
                "P1": "127.0.0.1:5001",
                "P2": "127.0.0.1:5002",
                "P3": "127.0.0.1:5003",
                "P4": "127.0.0.1:5004",
                "P5": "127.0.0.1:5005",
                "P6": "127.0.0.1:5006"
            },
            "PubKey_Mapping": {},
            "Session_Context": {
                "ASP_Types": {
                    "magic_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "large_output": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "attest": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "appraise": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "certificate": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "hashevidence": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "hashfile": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "hashfile_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "hashdir": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "invary_get_measurement": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "invary_get_measurement_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "provision": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 0
                        }
                    },
                    "readfile": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "run_command": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "readfile_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "selinux_pol_dump": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "sig": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "sig_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "sig_tpm": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "sig_tpm_appr": {
                        "FWD": "REPLACE",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    },
                    "uptime": {
                        "FWD": "EXTEND",
                        "EvInSig": "ALL",
                        "EvOutSig": {
                            "EvOutSig_CONSTRUCTOR": "OutN",
                            "EvOutSig_BODY": 1
                        }
                    }
                },
                "ASP_Comps": {
                    "attest": "magic_appr",
                    "certificate": "magic_appr",
                    "appraise": "magic_appr",
                    "hashevidence": "hashfile_appr",
                    "hashfile": "hashfile_appr",
                    "hashdir": "hashfile_appr",
                    "invary_get_measurement": "invary_get_measurement_appr",
                    "provision": "NULL",
                    "readfile": "readfile_appr",
                    "selinux_pol_dump": "hashfile_appr",
                    "sig": "sig_appr",
                    "sig_tpm": "sig_tpm_appr",
                    "uptime": "NULL",
                    "run_command": "hashfile_appr"
                }
            }
        }
    }
}